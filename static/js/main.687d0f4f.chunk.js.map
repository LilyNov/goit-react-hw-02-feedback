{"version":3,"sources":["FeedbackOptions/FeedbackOptions.js","Notification/Notification.js","Statistics/Statistics.js","Section/Section.js","Counter/Counter.js","App.js","index.js","FeedbackOptions/FeedbackOptions.module.css","Counter/Counter.module.css"],"names":["FeedbackOptions","onGoodBtn","onNeutralBtn","onBadBtn","className","s","btnGood","onClick","btnNeutral","btnBad","Notification","message","Statistics","good","neutral","bad","total","percentage","Section","title","children","Counter","state","handleGoodBtn","setState","handleNeutralBtn","handleBadlBtn","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","container","listStat","React","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mTAiBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAA5B,OACtB,qCACE,wBAAQC,UAAWC,IAAEC,QAASC,QAASN,EAAvC,kBAGA,wBAAQG,UAAWC,IAAEG,WAAYD,QAASL,EAA1C,qBAGA,wBAAQE,UAAWC,IAAEI,OAAQF,QAASJ,EAAtC,qBCRW,SAASO,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,4BAAIA,MCHV,IA2BeC,EA3BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,mCACGD,EAAQ,EACP,qCACE,qBAAIZ,UAAU,WAAd,mBACQ,sBAAMA,UAAU,YAAhB,SAA6BS,OAErC,qBAAIT,UAAU,WAAd,sBACW,sBAAMA,UAAU,YAAhB,SAA6BU,OAExC,qBAAIV,UAAU,WAAd,kBACO,sBAAMA,UAAU,YAAhB,SAA6BW,OAEpC,qBAAIX,UAAU,WAAd,oBACS,sBAAMA,UAAU,YAAhB,SAA6BY,OAEtC,qBAAIZ,UAAU,WAAd,+BAEE,uBAAMA,UAAU,YAAhB,cAA8Ba,EAA9B,cAIJ,cAACP,EAAD,CAAcC,QAAQ,yBCtBb,SAASO,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACa,0BAAVD,EACC,uDAEA,4CAGDC,K,ICLcC,E,4MAanBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,cAAgB,WACd,EAAKC,SAAS,CAAEX,KAAM,EAAKS,MAAMT,KAAO,K,EAG1CY,iBAAmB,WACjB,EAAKD,SAAS,CAAEV,QAAS,EAAKQ,MAAMR,QAAU,K,EAGhDY,cAAgB,WACd,EAAKF,SAAS,CAAET,IAAK,EAAKO,MAAMP,IAAM,K,uDAG9B,IAAD,EACwBY,KAAKL,MAA5BT,EADD,EACCA,KAEFe,EAAqBf,EAHpB,EACOC,QADP,EACgBC,IAGjBc,EAAkCC,KAAKC,MACnC,IAAPlB,EAAce,GAGjB,OACE,qBAAKxB,UAAWC,IAAE2B,UAAlB,SACE,sBAAK5B,UAAU,WAAf,UACE,cAACc,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,UAAW0B,KAAKJ,cAChBrB,aAAcyB,KAAKF,iBACnBtB,SAAUwB,KAAKD,kBAInB,cAACR,EAAD,CAASC,MAAM,aAAf,SACE,oBAAIf,UAAWC,IAAE4B,SAAjB,SACE,cAAC,EAAD,CACEpB,KAAMc,KAAKL,MAAMT,KACjBC,QAASa,KAAKL,MAAMR,QACpBC,IAAKY,KAAKL,MAAMP,IAChBC,MAAOY,EACPX,WAAYY,iB,GAzDSK,IAAMC,WAAtBd,EACZe,aAAe,CACpBvB,KAAM,EACNC,QAAS,EACTC,IAAK,GCAMsB,MARf,WACE,OACE,mCACE,cAAC,EAAD,CAASxB,KAAM,EAAGC,QAAS,EAAGC,IAAK,OCDzCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,6BAA6B,QAAU,4DAA4D,WAAa,+DAA+D,OAAS,6D,kBCAhND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,6B","file":"static/js/main.687d0f4f.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onGoodBtn, onNeutralBtn, onBadBtn }) => (\r\n  <>\r\n    <button className={s.btnGood} onClick={onGoodBtn}>\r\n      Good\r\n    </button>\r\n    <button className={s.btnNeutral} onClick={onNeutralBtn}>\r\n      Neutral\r\n    </button>\r\n    <button className={s.btnBad} onClick={onBadBtn}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <>\r\n    {total > 0 ? (\r\n      <>\r\n        <li className=\"itemStat\">\r\n          Good: <span className=\"countStat\">{good}</span>\r\n        </li>\r\n        <li className=\"itemStat\">\r\n          Neutral: <span className=\"countStat\">{neutral}</span>\r\n        </li>\r\n        <li className=\"itemStat\">\r\n          Bad: <span className=\"countStat\">{bad}</span>\r\n        </li>\r\n        <li className=\"itemStat\">\r\n          Total: <span className=\"countStat\">{total}</span>\r\n        </li>\r\n        <li className=\"itemStat\">\r\n          Positive feedback:\r\n          <span className=\"countStat\"> {percentage} %</span>\r\n        </li>\r\n      </>\r\n    ) : (\r\n      <Notification message=\"No feedback given\"></Notification>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title === 'Please leave feedback' ? (\r\n        <h2>Please leave feedback</h2>\r\n      ) : (\r\n        <h3>Statistics</h3>\r\n      )}\r\n\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Counter/Counter.module.css';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\n\r\nexport default class Counter extends React.Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGoodBtn = () => {\r\n    this.setState({ good: this.state.good + 1 });\r\n  };\r\n\r\n  handleNeutralBtn = () => {\r\n    this.setState({ neutral: this.state.neutral + 1 });\r\n  };\r\n\r\n  handleBadlBtn = () => {\r\n    this.setState({ bad: this.state.bad + 1 });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const countTotalFeedback = good + neutral + bad;\r\n    const countPositiveFeedbackPercentage = Math.round(\r\n      (good * 100) / countTotalFeedback,\r\n    );\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <div className=\"feedback\">\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              onGoodBtn={this.handleGoodBtn}\r\n              onNeutralBtn={this.handleNeutralBtn}\r\n              onBadBtn={this.handleBadlBtn}\r\n            />\r\n          </Section>\r\n\r\n          <Section title=\"Statistics\">\r\n            <ul className={s.listStat}>\r\n              <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={countTotalFeedback}\r\n                percentage={countPositiveFeedbackPercentage}\r\n              />\r\n            </ul>\r\n          </Section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport Counter from './Counter/Counter';\n\nfunction App() {\n  return (\n    <>\n      <Counter good={0} neutral={0} bad={0} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3v1Jc\",\"btnGood\":\"FeedbackOptions_btnGood__3Zlxh FeedbackOptions_btn__3v1Jc\",\"btnNeutral\":\"FeedbackOptions_btnNeutral__1dLNn FeedbackOptions_btn__3v1Jc\",\"btnBad\":\"FeedbackOptions_btnBad__3jxJv FeedbackOptions_btn__3v1Jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__2cm8G\",\"listStat\":\"Counter_listStat__3sbdG\"};"],"sourceRoot":""}